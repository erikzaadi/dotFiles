#!/bin/sh

VOLTAGE="ðŸ”‹ "
CHARGING="âš¡ "


linux_get_bat ()
{
    bf=$(cat $BAT_FULL)
    bn=$(cat $BAT_NOW)
    echo "${PLUGGED}$(( 100 * $bn / $bf ))"
}

freebsd_get_bat ()
{
    echo "$(sysctl -n hw.acpi.battery.life)"
}

# Do with grep and awk unless too hard

# TODO Identify which machine we're on from teh script.

battery_status()
{
case $(uname -s) in
    "Linux")
        BATPATH=/sys/class/power_supply/BAT0
        STATUS=$BATPATH/status
        if [ "`cat $BATPATH/status`" = "Charging" ]; then
            PLUGGED=$CHARGING
        else
            PLUGGED=$VOLTAGE
        fi
        if [ -f $BATPATH/energy_full ]; then
            BAT_FULL=$BATPATH/energy_full
            BAT_NOW=$BATPATH/energy_now
        else
            BAT_FULL=$BATPATH/charge_full
            BAT_NOW=$BATPATH/charge_now
        fi
        if [ "$1" = `cat $STATUS` -o "$1" = "" ]; then
            linux_get_bat
        fi
        ;;
    "FreeBSD")
        STATUS=`sysctl -n hw.acpi.battery.state`
        case $1 in
            "Discharging")
                if [ $STATUS -eq 1 ]; then
                    freebsd_get_bat
                fi
                ;;
            "Charging")
                if [ $STATUS -eq 2 ]; then
                    freebsd_get_bat
                fi
                ;;
            "")
                freebsd_get_bat
                ;;
        esac
        ;;
    "Darwin")
        case $1 in
            "Discharging")
                ext="No";;
            "Charging")
                ext="Yes";;
        esac
        ioreg -c AppleSmartBattery -w0 | \
        grep -o '"[^"]*" = [^ ]*' | \
        sed -e 's/= //g' -e 's/"//g' | \
        sort | \
        while read key value; do
            case $key in
                "MaxCapacity")
                    export maxcap=$value;;
                "CurrentCapacity")
                    export curcap=$value;;
                "ExternalConnected")
                    export extconnect=$value;;
            esac
            if [[ -n $maxcap && -n $curcap && -n $extconnect ]]; then
                if [[ "$curcap" == "$maxcap" ]]; then
                    exit
                fi
                if [[ "$extconnect" == "Yes" ]]; then
                    echo "" $CHARGING $(( 100 * $curcap / $maxcap ))""
                else
                    echo "" $VOLTAGE $(( 100 * $curcap / $maxcap ))""
                fi
                break
            fi
        done
esac
}

BATTERY_STATUS=`battery_status $1`
[ -z "$BATTERY_STATUS" ] && exit
echo ${BATTERY_STATUS}%

