[github]
    user = erikzaadi
    token =

[user]
    name = erikzaadi
    email = erik.zaadi@gmail.com
    editor = nvim

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = true
    pager = true

[color "branch"]
    current = cyan
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[diff]
    tool = vimdiff

[merge]
    ; tool = vimdiff
    conflictstyle = diff3
    prompt = false
    tool = fugitive

[rerere]
    enabled = true

[push]
    default = tracking

[alias]
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    last  = cat-file commit HEAD
    st    = ls-files --exclude-per-directory=.gitignore --exclude-from=.git/info/exclude -t -o -u -s -m -d
    stc   = diff --stat --name-status --cached
    cat   = -p cat-file -p
    up    = !git remote update ; git gc

    top = !eval cd "$(pwd)/$(git rev-parse --show-cdup)" && pwd

    pushu = !git push -u origin $(git symbolic-ref --short HEAD)
    pushf = !git push origin $(git symbolic-ref --short HEAD) --force-with-lease

    tblog = log --not-grep='Auto-increment of build number due to changes in directory '

    vgc = repack -f -a -d --depth=250 --window=250
    nvgc = !ionice -n7 nice -n20 git vgc

    log1 = log --pretty=oneline --abbrev-commit --decorate

    findnext = rev-list --reverse -n1 HEAD..master
    checkoutnext = !git checkout `git findnext`

    file-blame = !git ls-files | xargs -n1 -i{} git log -1 --pretty=format:\"%ci {}\" -- {}
    amend = commit --amend -C HEAD

    pr = !hub pull-request -o

    su = submodule update --init

    c = commit

    deleteremote = "!f() { echo "Deleting $1" && git push origin ":$1"; }; f"

    #changes executable bit of file in index: git chmod +|- FILE
    chmod = "!f() { git update-index --chmod=$1x $2; }; f"

    #http://stackoverflow.com/a/12056944/110124
    sed = !sh -c 'git grep --null --full-name --name-only --perl-regexp -e \"$1\" | xargs -0 perl -i -p -e \"s/$1/$2/g\"' -

    ragecommit = !git commit -m "$(random_emoticon)"

    mergef = merge --ff-only

    pullf = pull --ff-only

    fnm = "!f() { WANTED_BRANCH="${1:-master}"; echo "Fetching and merging ${WANTED_BRANCH}";git fetch origin "${WANTED_BRANCH}:${WANTED_BRANCH}"; }; f"

    fnmu = "!f() { WANTED_BRANCH="${1:-master}"; echo "Fetching and merging ${WANTED_BRANCH}";git fetch upstream "${WANTED_BRANCH}:${WANTED_BRANCH}";git push origin master:master;}; f"

    reset-date = commit --amend --date=now

    # git rebase interactively based on branch ($1)
    rbm = "!f() { WANTED_BRANCH="${1:-master}"; echo "Rebasing ${WANTED_BRANCH}";git rebase --autostash -i "${WANTED_BRANCH}"; }; f"

    micdrop = "!f() { PREVIOUS_BRANCH=$(git rev-parse --symbolic-full-name @{-1} | sed 's/refs\\/heads\\///g'); WANTED_BRANCH="${1:-${PREVIOUS_BRANCH}}"; echo "Cleaning up ${WANTED_BRANCH} like a boss!"; git branch -d "${WANTED_BRANCH}";git push origin ":${WANTED_BRANCH}"; }; f"

    prune-remote = remote prune origin

    cleanup-local-merged = '!f() { git branch --merged ${1:-master} | grep -v " ${1:-master}$" | xargs -r git branch -d; }; f'

    reset-to-head = "!f() { WANTED_REMOTE="${1:-origin}"; NEEDED_REF="${WANTED_REMOTE}/$(git branch-name)"; echo "Resettin hard to ${NEEDED_REF}"; git reset --hard ${NEEDED_REF}"

    list-aliases = "!git config -l | grep alias | cut -c 7-"

    # https://thoughtbot.com/blog/powerful-git-macros-for-automating-everyday-workflows
    mru = for-each-ref --sort=-committerdate --count=10 refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes

[core]
    whitespace = trailing-space,space-before-tab,indent-with-non-tab,cr-at-eol
    editor = nvim
    hooksPath = ~/.git-hook-templates
    pager = diff-so-fancy | less --tabs=4 -RFX
	excludesfile = /Users/erikzaadi/.gitignore

[help]
    autocorrect = 1

[gitreview]
    username = erikzaadi
[mergetool]
    prompt = false
[mergetool "fugitive"]
    cmd = nvim -f -c \"Gdiff\" \"$MERGED\"
[credential]
    helper = osxkeychain
[ghi]
    token = !security find-internet-password -a erikzaadi -s github.com -l 'ghi token' -w
[rebase]
    autosquash = true
[pull]
	ff = only
