local g = vim.g      -- a table to access global variables
g.mapleader = ' '
local function map(mode, lhs, rhs, opts)
  local options = {noremap = true}
  if opts then options = vim.tbl_extend('force', options, opts) end
  vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end
-- map('', 'Q', '<nop>')
-- map('', '<Up>', '<Nop>')
-- map('', '<Down>', '<Nop>')
-- map('', '<Left>', '<Nop>')
-- map('', '<Right>', '<Nop>')
map('n', '<leader>F', '<cmd>Telescope find_files<cr>')
map('n', '<leader>f', '<cmd>Telescope git_files<cr>')
map('n', '<leader>a', '<cmd>Telescope live_grep<cr>')
map('n', '<leader>K', '<cmd>Telescope grep_string<cr>')
map('n', '<leader>e', '<cmd>Telescope file_browser<cr>')
map('n', '<leader>b', '<cmd>Telescope buffers<cr>')
map('n', '<leader>h', '<cmd>Telescope help_tags<cr>')
map('n', '<leader>i', '<cmd>lua require(\'telescope.builtin\').lsp_code_actions()<cr>')
map('n', '<leader>d', '<cmd>lua vim.lsp.buf.definition()<CR>')
map('n', '<leader>k', '<cmd>lua vim.lsp.buf.hover()<CR>')
map('n', '<leader>r', '<cmd>lua vim.lsp.buf.references()<CR>')
map('n', '<leader>R', '<cmd>lua vim.lsp.buf.rename()<CR>')
map('n', '<leader>t', ':TroubleToggle<cr>')
map('n', '<leader>T', '<cmd>lua vim.lsp.buf.type_definition()<CR>')
map('n', '<leader>I', '<cmd>lua vim.lsp.buf.formatting()<CR>')
map('n', '<leader>[', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>')
map('n', '<leader>]', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>')
map('v', '<Enter>', '<Plug>(EasyAlign)')
map('i', '<F1>', '<Esc>')
map('n', '<F1>', '<Esc>')
map('v', '<F1>', '<Esc>')
map('', '<F1>', '<Esc>')
map('n', '<leader><leader>h', ':noh<CR>')
map('n', '<leader><leader>r', ':redraw!<CR>')
map('n', '<A-down>', '<C-W>+')
map('n', '<A-up>', '<C-W>-')
map('n', '<A-left>', '<C-W>>')
map('n', '<A-right>', '<C-W><')
-- fugitive git bindings -
-- http://www.reddit.com/r/vim/comments/21f4gm/best_workflow_when_using_fugitive/
map('n', '<leader>gs', ':Git<CR>')
map('n', '<leader>gc', ':Git commit -v -q<CR>')
map('n', '<leader>gd', ':Gdiff<CR>')
map('n', '<leader>gm', ':Gmove<Space>')
map('n', '<leader>go', ':Git checkout<Space>')
map('n', '<leader>gps', ':Git push<CR>')
map('n', '<leader>gpu', ':AsyncRun git pushu<CR>')
map('n', '<leader>gpf', ':Git push --force-with-lease<CR>')
map('n', '<leader>gpr', ':Ginitpull<CR>')
map('n', '<leader>grm', ':Git rebase -i master<CR>')
map('', 'q:', ':q')
map('n', '<leader>;', ':next $MYVIMRC<CR>')
map('n', '<leader><leader>;', ':source $MYVIMRC<CR>')
map('n', '<leader><tab>', ':tabnext<CR>')
map('n', '<leader><S-Tab>', ':tabprevious<CR>')
